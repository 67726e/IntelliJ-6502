{
	parserClass="us.hexcoder.asm6502.parser.Asm6502Parser"
	stubParserClass="us.hexcoder.asm6502.parser.GeneratedParserUtilBase"

	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

	psiClassPrefix="Asm6502"
	psiImplClassSuffix="Impl"
	psiPackage="us.hexcoder.asm6502.psi"
	psiImplPackage="us.hexcoder.asm6502.psi.impl"
	psiImplUtilClass="us.hexcoder.asm6502.psi.Asm6502PsiImplUtil"

	elementTypeHolderClass="us.hexcoder.asm6502.psi.Asm6502Types"
	elementTypeClass="us.hexcoder.asm6502.psi.Asm6502ElementType"
	tokenTypeClass="us.hexcoder.asm6502.psi.Asm6502TokenType"
}

asm6502File ::= Element*
		;

Element ::= COMMENT
		| CRLF
		| LabelDeclaration
		| Operation
		;

Operation ::= (MNEMONIC Operand?)
		| (DIRECTIVE DirectiveArgument)
		;

Operand ::= ACCUMULATOR_OPERAND
		| LABEL_OPERAND
		| OperandNumber
		| OperandAddressRegister
		| OperandIndirect
		| ADDRESS_VALUE
		;

OperandNumber ::= BINARY_OPERAND
		| DECIMAL_OPERAND
		| HEXADECIMAL_OPERAND
		;

OperandAddressRegister ::= OperandAddressX
		| OperandAddressY
		;

OperandAddressX ::= ADDRESS_VALUE COMMA REGISTER_X
		;

OperandAddressY ::= ADDRESS_VALUE COMMA REGISTER_Y
		;

OperandIndirect ::= OPEN_PAREN (OperandAddressRegister | ADDRESS_VALUE) CLOSE_PAREN
		;

DirectiveArgument ::= DIRECTIVE_STRING
		| DirectiveNumber
		;

DirectiveNumber ::= BINARY_NUMBER
		| DECIMAL_NUMBER
		| HEXADECIMAL_NUMBER
		;

LabelDeclaration ::= LABEL
		;
