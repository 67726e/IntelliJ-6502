{
	parserClass="us.hexcoder.asm6502.parser.Asm6502Parser"
	stubParserClass="us.hexcoder.asm6502.parser.GeneratedParserUtilBase"

	extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

	psiClassPrefix="Asm6502"
	psiImplClassSuffix="Impl"
	psiPackage="us.hexcoder.asm6502.psi"
	psiImplPackage="us.hexcoder.asm6502.psi.impl"
	psiImplUtilClass="us.hexcoder.asm6502.psi.Asm6502PsiImplUtil"

	elementTypeHolderClass="us.hexcoder.asm6502.psi.Asm6502Types"
	elementTypeClass="us.hexcoder.asm6502.psi.Asm6502ElementType"
	tokenTypeClass="us.hexcoder.asm6502.psi.Asm6502TokenType"
}

asm6502File ::= Element*
		;

Element ::= COMMENT
		| CRLF
		| LabelDeclaration
		| Operation
		;

Operation ::= MnemonicOperation
		| DirectiveOperation
		;

DirectiveOperation ::= (DirectiveCommand DirectiveArgument?)
		;

DirectiveCommand ::= DIRECTIVE
		;


MnemonicOperation ::= (MnemonicCommand Operand?)
		;

MnemonicCommand ::= MNEMONIC
		;

Operand ::= ACCUMULATOR_OPERAND
		| LABEL_OPERAND
		| OperandNumber
		| OperandZeroPageX
		| OperandZeroPageY
		| OperandZeroPage
		| OperandImmediateX
		| OperandAbsoluteY
		| OperandIndirectX
		| OperandIndirectY
		| OperandIndirect
		| OperandAbsolute
		;

OperandNumber ::= BINARY_OPERAND
		| DECIMAL_OPERAND
		| HEXADECIMAL_OPERAND
		;

OperandZeroPage ::= ZERO_PAGE_VALUE
		;

OperandZeroPageX ::= ZERO_PAGE_VALUE COMMA REGISTER_X
		;

OperandZeroPageY ::= ZERO_PAGE_VALUE COMMA REGISTER_Y
		;

OperandAbsolute ::= ABSOLUTE_VALUE
		;

OperandAbsoluteX ::= ABSOLUTE_VALUE COMMA REGISTER_X
		;

OperandAbsoluteY ::= ABSOLUTE_VALUE COMMA REGISTER_Y
		;

OperandIndirect ::= OPEN_PAREN OperandAbsolute CLOSE_PAREN
		;

OperandIndirectX ::= OPEN_PAREN OperandAbsoluteX CLOSE_PAREN
		;

OperandIndirectY ::= OPEN_PAREN OperandAbsoluteY CLOSE_PAREN
		;

DirectiveArgument ::= DirectiveString
		| DirectiveNumber
		;

DirectiveNumber ::= BINARY_NUMBER
		| DECIMAL_NUMBER
		| HEXADECIMAL_NUMBER
		;

DirectiveString ::= (OPEN_STRING STRING_CHAR* CLOSE_STRING)
		;

LabelDeclaration ::= LABEL
		;
